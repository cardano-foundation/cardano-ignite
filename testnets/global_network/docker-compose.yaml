---

x-base: &base
  image: ${testnet}:latest
  restart: unless-stopped
  cap_add:
    - NET_ADMIN
  logging:
    driver: "loki"
    options:
      mode: non-blocking
      loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
      loki-retries: "5"
  build:
    context: "../../"
    # Binary version
    #dockerfile: "cardano-node/Dockerfile.binary"
    #args:
    #  CARDANO_NODE_VERSION: "10.5.1"

    # Source version
    dockerfile: "cardano-node/Dockerfile.source"
    args:
      CARDANO_NODE_REF: "10.5.1"

x-base_eu: &base_eu
  <<: *base
  env_file:
    - env_eu.base
  dns:
    - 172.16.3.2
  networks:
    - eu_net

x-base_na: &base_na
  <<: *base
  env_file:
    - env_na.base
  dns:
    - 172.16.1.2
  networks:
    - na_net

x-base_as: &base_as
  <<: *base
  env_file:
    - env_as.base
  dns:
    - 172.16.4.2
  networks:
    - as_net

x-base_gw: &base_gw
    image: ${testnet}_gateway:latest
    restart: unless-stopped
    build:
      context: "../../"
      dockerfile: gateway/Dockerfile
    cap_add:
      - NET_ADMIN
      - NET_RAW
    sysctls:
      net.ipv4.ip_forward: "1"

networks:

  # Defalt Network
  # Used for communicating with the host
  default:
    driver: bridge

  # North America Network
  na_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.10
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.1.0/24

  # Link between Europe and North America
  eu_na_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.20
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.2.0/24

  # Europe Network
  eu_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.30
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.3.0/24

  # Asia Network
  as_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.40
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.4.0/24

  # Asia Europe Link
  as_eu_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.50
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.5.0/24

  # Asia North America Link
  as_na_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.60
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.6.0/24

  # Management Network
  mgmt_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.70
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.7.0/24

  # Management Asia Link
  ad_as_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.80
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.8.0/24

  # Management Europe Link
  ad_eu_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.90
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.9.0/24

  # Management North America Link
  ad_na_net:
    driver: macvlan
    driver_opts:
      parent: ${HOST_INTERFACE}.100
      macvlan_mode: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.10.0/24

services:

  # Pool 1

  # Block Producer
  p1bp:
    <<: *base_na
    container_name: p1bp
    hostname: p1bp.example
    volumes:
      - p1bp:/opt/cardano-node/data
    environment:
      POOL_ID: "1"
      TYPE: bp
      PEER_SHARING: "false"
      EGRESS_POLL_INTERVAL: 0.001
    networks:
      na_net:
        ipv4_address: 172.16.1.101
    profiles: [build, core, na, p1]

  # Relay
  p1r1:
    <<: *base_na
    container_name: p1r1
    hostname: p1r1.example
    volumes:
      - p1r1:/opt/cardano-node/data
    environment:
      POOL_ID: "1"
      RELAY_ID: "1"
      TYPE: relay
      EGRESS_POLL_INTERVAL: 0.001
    networks:
      na_net:
        ipv4_address: 172.16.1.102
    profiles: [build, core, na, p1, p1relays]

  # Relay
  p1r2:
    <<: *base_na
    container_name: p1r2
    hostname: p1r2.example
    volumes:
      - p1r2:/opt/cardano-node/data
    environment:
      POOL_ID: "1"
      RELAY_ID: "2"
      TYPE: relay
      EGRESS_POLL_INTERVAL: 0.001
    networks:
      na_net:
        ipv4_address: 172.16.1.103
    profiles: [build, core, na, p1, p1relays]

  # Relay
  p1r3:
    <<: *base_na
    container_name: p1r3
    hostname: p1r3.example
    volumes:
      - p1r3:/opt/cardano-node/data
    environment:
      POOL_ID: "1"
      RELAY_ID: "3"
      TYPE: privaterelay
      EGRESS_POLL_INTERVAL: 0.001
    networks:
      na_net:
        ipv4_address: 172.16.1.104
    profiles: [na, p1, p1relays, privaterelays]

  # Pool 2

  # Block Producer
  p2bp:
    <<: *base_eu
    container_name: p2bp
    hostname: p2bp.example
    volumes:
      - p2bp:/opt/cardano-node/data
    environment:
      POOL_ID: "2"
      TYPE: bp
      PEER_SHARING: "false"
    networks:
      eu_net:
        ipv4_address: 172.16.3.101
    profiles: [build, core, eu, p2]

  # Relay
  p2r1:
    <<: *base_eu
    container_name: p2r1
    hostname: p2r1.example
    volumes:
      - p2r1:/opt/cardano-node/data
    environment:
      POOL_ID: "2"
      RELAY_ID: "1"
      TYPE: relay
    networks:
      eu_net:
        ipv4_address: 172.16.3.102
    profiles: [build, core, eu, p2, p2relays]

  # Relay
  p2r2:
    <<: *base_eu
    container_name: p2r2
    hostname: p2r2.example
    volumes:
      - p2r2:/opt/cardano-node/data
    environment:
      POOL_ID: "2"
      RELAY_ID: "2"
      TYPE: relay
    networks:
      eu_net:
        ipv4_address: 172.16.3.103
    profiles: [build, core, eu, p2, p2relays]

  # Relay
  p2r3:
    <<: *base_eu
    container_name: p2r3
    hostname: p2r3.example
    volumes:
      - p2r3:/opt/cardano-node/data
    environment:
      POOL_ID: "2"
      RELAY_ID: "3"
      TYPE: privaterelay
    networks:
      eu_net:
        ipv4_address: 172.16.3.104
    profiles: [eu, p2, p2relays, privaterelays]

  # Pool 3

  # Block Producer
  p3bp:
    <<: *base_as
    container_name: p3bp
    hostname: p3bp.example
    volumes:
      - p3bp:/opt/cardano-node/data
    environment:
      POOL_ID: "3"
      TYPE: bp
      PEER_SHARING: "false"
    networks:
      as_net:
        ipv4_address: 172.16.4.101
    profiles: [build, core, as, p3]

  # Relay
  p3r1:
    <<: *base_as
    container_name: p3r1
    hostname: p3r1.example
    volumes:
      - p3r1:/opt/cardano-node/data
    environment:
      POOL_ID: "3"
      RELAY_ID: "1"
      TYPE: relay
    networks:
      as_net:
        ipv4_address: 172.16.4.102
    profiles: [build, core, as, p3, p3relays]

  # Relay
  p3r2:
    <<: *base_as
    container_name: p3r2
    hostname: p3r2.example
    volumes:
      - p3r2:/opt/cardano-node/data
    environment:
      POOL_ID: "3"
      RELAY_ID: "2"
      TYPE: relay
    networks:
      as_net:
        ipv4_address: 172.16.4.103
    profiles: [build, core, as, p3, p3relays]

  # Relay
  p3r3:
    <<: *base_as
    container_name: p3r3
    hostname: p3r3.example
    volumes:
      - p3r3:/opt/cardano-node/data
    environment:
      POOL_ID: "3"
      RELAY_ID: "3"
      TYPE: privaterelay
    networks:
      as_net:
        ipv4_address: 172.16.4.104
    profiles: [p3, p3relays, privaterelays]

  # Pool 4

  # Block Producer
  p4bp:
    <<: *base_eu
    container_name: p4bp
    hostname: p4bp.example
    volumes:
      - p4bp:/opt/cardano-node/data
    environment:
      POOL_ID: "4"
      TYPE: bp
      PEER_SHARING: "false"
    networks:
      eu_net:
        ipv4_address: 172.16.3.111
    profiles: [build, core, eu, p4]

  # Relay
  p4r1:
    <<: *base_eu
    container_name: p4r1
    hostname: p4r1.example
    volumes:
      - p4r1:/opt/cardano-node/data
    environment:
      POOL_ID: "4"
      RELAY_ID: "1"
      TYPE: relay
    networks:
      eu_net:
        ipv4_address: 172.16.3.112
    profiles: [build, core, eu, p4, p4relays]

  # Relay
  p4r2:
    <<: *base_eu
    container_name: p4r2
    hostname: p4r2.example
    volumes:
      - p4r2:/opt/cardano-node/data
    environment:
      POOL_ID: "4"
      RELAY_ID: "2"
      TYPE: relay
    networks:
      eu_net:
        ipv4_address: 172.16.3.113
    profiles: [build, core, eu, p4, p4relays]

  # Relay
  p4r3:
    <<: *base_eu
    container_name: p4r3
    hostname: p4r3.example
    volumes:
      - p4r3:/opt/cardano-node/data
    environment:
      POOL_ID: "4"
      RELAY_ID: "3"
      TYPE: privaterelay
    networks:
      eu_net:
        ipv4_address: 172.16.3.114
    profiles: [eu, p4, p4relays, privaterelays]

  # Pool 5

  # Block Producer
  p5bp:
    <<: *base_na
    container_name: p5bp
    hostname: p5bp.example
    volumes:
      - p5bp:/opt/cardano-node/data
    environment:
      POOL_ID: "5"
      TYPE: bp
      PEER_SHARING: "false"
    networks:
      na_net:
        ipv4_address: 172.16.1.111
    profiles: [build, core, na, p5]

  # Relay
  p5r1:
    <<: *base_na
    container_name: p5r1
    hostname: p5r1.example
    volumes:
      - p5r1:/opt/cardano-node/data
    environment:
      POOL_ID: "5"
      RELAY_ID: "1"
      TYPE: relay
    networks:
      na_net:
        ipv4_address: 172.16.1.112
    profiles: [build, core, na, p5, p5relays]

  # Relay
  p5r2:
    <<: *base_na
    container_name: p5r2
    hostname: p5r2.example
    volumes:
      - p5r2:/opt/cardano-node/data
    environment:
      POOL_ID: "5"
      RELAY_ID: "2"
      TYPE: relay
    networks:
      na_net:
        ipv4_address: 172.16.1.123
    profiles: [build, core, na, p5, p5relays]

  # Relay
  p5r3:
    <<: *base_na
    container_name: p5r3
    hostname: p5r3.example
    volumes:
      - p5r3:/opt/cardano-node/data
    environment:
      POOL_ID: "5"
      RELAY_ID: "3"
      TYPE: privaterelay
    networks:
      na_net:
        ipv4_address: 172.16.1.124
    profiles: [na, p5, p5relays, privaterelays]

  # Pool 6

  # Block Producer
  p6bp:
    <<: *base_eu
    container_name: p6bp
    hostname: p6bp.example
    volumes:
      - p6bp:/opt/cardano-node/data
    environment:
      POOL_ID: "6"
      TYPE: bp
      PEER_SHARING: "false"
    networks:
      eu_net:
        ipv4_address: 172.16.3.121
    profiles: [build, core, eu, p6]

  # Relay
  p6r1:
    <<: *base_eu
    container_name: p6r1
    hostname: p6r1.example
    volumes:
      - p6r1:/opt/cardano-node/data
    environment:
      POOL_ID: "6"
      RELAY_ID: "1"
      TYPE: relay
    networks:
      eu_net:
        ipv4_address: 172.16.3.122
    profiles: [build, core, eu, p6, p6relays]

  # Relay
  p6r2:
    <<: *base_eu
    container_name: p6r2
    hostname: p6r2.example
    volumes:
      - p6r2:/opt/cardano-node/data
    environment:
      POOL_ID: "6"
      RELAY_ID: "2"
      TYPE: relay
    networks:
      eu_net:
        ipv4_address: 172.16.3.123
    profiles: [build, core, eu, p6, p6relays]

  # Relay
  p6r3:
    <<: *base_eu
    container_name: p6r3
    hostname: p6r3.example
    volumes:
      - p6r3:/opt/cardano-node/data
    environment:
      POOL_ID: "6"
      RELAY_ID: "3"
      TYPE: privaterelay
    networks:
      eu_net:
        ipv4_address: 172.16.3.124
    profiles: [eu, p6, p6relays, privaterelays]

  # North America Gateway
  nagw:
    <<: *base_gw
    container_name: nagw
    hostname: nagw.example
    environment:
      GATEWAY_ID: "nagw"
    networks:
      na_net:
        ipv4_address: 172.16.1.11
      eu_na_net:
        ipv4_address: 172.16.2.11
      as_na_net:
        ipv4_address: 172.16.6.11
      ad_na_net:
        ipv4_address: 172.16.10.11
    dns:
      - 172.16.1.2
    profiles: [build, core, na, gateways]

  # Europe Gateway
  eugw:
    <<: *base_gw
    container_name: eugw
    hostname: eugw.example
    environment:
      GATEWAY_ID: "eugw"
    networks:
      eu_net:
        ipv4_address: 172.16.3.12
      eu_na_net:
        ipv4_address: 172.16.2.12
      as_eu_net:
        ipv4_address: 172.16.5.12
      ad_eu_net:
        ipv4_address: 172.16.9.12
    dns:
      - 172.16.2.2
    profiles: [build, core, eu, gateways]

  # Asia Gateway
  asgw:
    <<: *base_gw
    container_name: asgw
    hostname: asgw.example
    environment:
      GATEWAY_ID: "asgw"
    networks:
      as_net:
        ipv4_address: 172.16.4.13
      as_eu_net:
        ipv4_address: 172.16.5.13
      as_na_net:
        ipv4_address: 172.16.6.13
      ad_as_net:
        ipv4_address: 172.16.8.13
    dns:
      - 172.16.4.2
    profiles: [build, core, as, gateways]

  # Management Gateway
  adgw:
    <<: *base_gw
    container_name: adgw
    hostname: adgw.example
    environment:
      GATEWAY_ID: "adgw"
    networks:
      mgmt_net:
        ipv4_address: 172.16.7.14
      ad_as_net:
        ipv4_address: 172.16.8.14
      ad_eu_net:
        ipv4_address: 172.16.9.14
      ad_na_net:
        ipv4_address: 172.16.10.14
    dns:
      - 172.16.7.2
    profiles: [build, core, mgmt, gateways]

  # DNS Server
  ns:
    image: coredns/coredns:1.12.2
    container_name: ns
    hostname: ns.example
    restart: unless-stopped
    command: -conf /etc/coredns/corefile
    volumes:
      - ./coredns:/etc/coredns # Mount custom corefile
    networks:
      na_net:
        ipv4_address: 172.16.1.2
      eu_na_net:
        ipv4_address: 172.16.2.2
      eu_net:
        ipv4_address: 172.16.3.2
      as_net:
        ipv4_address: 172.16.4.2
      mgmt_net:
        ipv4_address: 172.16.7.2
    profiles: [build, core, mgmt]

  sidecar:
    image: ${testnet}_sidecar:latest
    container_name: sidecar
    hostname: sidecar.example
    restart: unless-stopped
    build:
      context: "../../"
      dockerfile: "sidecar/Dockerfile"
    environment:
      TOPOLOGY: "fancy"
      POOLS: "6"
    cap_add:
      - NET_ADMIN
    networks:
      mgmt_net:
        ipv4_address: 172.16.7.3
    dns:
      - 172.16.7.2
    depends_on:
      db:
        condition: service_started
    profiles: [build, core, mgmt]

  # Client 1
  # Used by cardano-db-sync
  c1:
    <<: *base_eu
    container_name: c1
    hostname: c1.example
    volumes:
      - c1:/opt/cardano-node
    environment:
      POOL_ID: "1"
      TYPE: "client"
      UTXOHD: "true"
      SYSTEM_START: ${SYSTEM_START:-}
    networks:
      eu_net:
        ipv4_address: 172.16.3.4
    profiles: [build, core, eu]

  # TX generator 1
  c2:
    <<: *base_na
    container_name: c2
    hostname: c2.example
    volumes:
      - c2:/opt/cardano-node
    environment:
      POOL_ID: "1"
      TYPE: "txg"
      TPS: "1"
      UTXOHD: "true"
      SYSTEM_START: ${SYSTEM_START:-}
    networks:
      na_net:
        ipv4_address: 172.16.1.12
    profiles: [build, optional, tx-generators]

  # PostgreSQL Database
  db:
    image: postgresql:latest
    container_name: db
    hostname: db.example
    restart: unless-stopped
    volumes:
      - db:/opt/postgresql
    build:
      context: "../../"
      dockerfile: "postgresql/Dockerfile"
    networks:
      eu_net:
        ipv4_address: 172.16.3.5
      na_net:
        ipv4_address: 172.16.1.5
      as_net:
        ipv4_address: 172.16.4.5
      mgmt_net:
        ipv4_address: 172.16.7.5
    dns:
      - 172.16.7.2
    profiles: [build, core, mgmt]

  dbsync:
    image: cardano-db-sync:latest
    container_name: dbsync
    hostname: dbsync.example
    restart: unless-stopped
    volumes:
      - dbsync:/opt/cardano-db-sync
      - c1:/opt/cardano-node
    environment:
      DB_HOST: "db.example"
    build:
      context: "../../"
      dockerfile: "cardano-db-sync/Dockerfile.binary"
    networks:
      mgmt_net:
        ipv4_address: 172.16.7.6
    dns:
      - 172.16.7.2
    depends_on:
      db:
        condition: service_started
    profiles: [build, core, mgmt]

  blockfrost:
    image: blockfrost:latest
    container_name: blockfrost
    hostname: blockfrost.example
    restart: unless-stopped
    volumes:
      - c1:/opt/cardano-node
    environment:
      DB_HOST: "db.example"
    build:
      context: "../../"
      dockerfile: "blockfrost/Dockerfile"
    networks:
      mgmt_net:
        ipv4_address: 172.16.7.7
    profiles: [build, optional, mgmt]

  prometheus:
    image: prom/prometheus:v3.4.2
    container_name: prometheus
    hostname: prometheus.example
    restart: unless-stopped
    volumes:
      - prometheus:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      eu_net:
        ipv4_address: 172.16.3.8
      na_net:
        ipv4_address: 172.16.1.8
      as_net:
        ipv4_address: 172.16.4.8
      mgmt_net:
        ipv4_address: 172.16.7.8
    dns:
      - 172.16.7.2
    depends_on:
      blackbox:
        condition: service_started
    profiles: [build, core, mgmt]

  blackbox:
    image: quay.io/prometheus/blackbox-exporter:v0.27.0
    container_name: blackbox
    hostname: blackbox.example
    restart: unless-stopped
    command: --config.file=/etc/blackbox_exporter/blackbox.yml
    volumes:
      - ../../blackbox:/etc/blackbox_exporter/
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      eu_net:
        ipv4_address: 172.16.3.9
      na_net:
        ipv4_address: 172.16.1.9
      as_net:
        ipv4_address: 172.16.4.9
      mgmt_net:
        ipv4_address: 172.16.7.9
    dns:
      - 172.16.7.2
    profiles: [build, core, mgmt]

  loki:
    image: grafana/loki:3.4.4
    container_name: loki
    hostname: loki.example
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "${LOKI_HOST:-3100}:3100"
    volumes:
      - loki:/loki
    networks:
      default:
      mgmt_net:
        ipv4_address: 172.16.7.10
    dns:
      - 172.16.7.2
    profiles: [build, core, mgmt]

  grafana:
    image: grafana/grafana:12.0.2
    container_name: grafana
    hostname: grafana.example
    restart: unless-stopped
    ports:
      - "${GRAFANA_HOST:-3000}:3000"
    volumes:
      - grafana:/var/lib/grafana
      - ../../grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: cardano
      GF_SECURITY_ADMIN_PASSWORD: cardano
    networks:
      default:
      mgmt_net:
        ipv4_address: 172.16.7.11
    dns:
      - 172.16.7.2
    profiles: [build, core, mgmt]

  yaci:
    image: yaci-store:latest
    container_name: yaci
    hostname: yaci.example
    restart: unless-stopped
    volumes:
      - c1:/opt/cardano-node
      - ../../yaci-store/application.properties:/opt/yaci/config/application.properties
      - ../../yaci-store/application-ledger-state.properties:/opt/yaci/config/application-ledger-state.properties
    build:
      context: "../../"
      dockerfile: "yaci-store/Dockerfile.binary"
    environment:
      REGION: EU
    cap_add:
      - NET_ADMIN
    networks:
      eu_net:
        ipv4_address: 172.16.3.22
    dns:
      - 172.16.3.2
    profiles: [build, optional]

volumes:
  p1bp:
  p1r1:
  p1r2:
  p1r3:
  p2bp:
  p2r1:
  p2r2:
  p2r3:
  p3bp:
  p3r1:
  p3r2:
  p3r3:
  p4bp:
  p4r1:
  p4r2:
  p4r3:
  p5bp:
  p5r1:
  p5r2:
  p5r3:
  p6bp:
  p6r1:
  p6r2:
  p6r3:
  c1:
  c2:
  db:
  dbsync:
  prometheus:
  loki:
  grafana:
