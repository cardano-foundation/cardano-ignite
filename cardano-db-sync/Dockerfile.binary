FROM docker.io/debian:stable-slim AS build

ARG CARDANO_CLI_VERSION="${CARDANO_CLI_VERSION:-10.1.1.0}"
ARG CARDANO_DB_SYNC_VERSION="${CARDANO_DB_SYNC_VERSION:-13.6.0.4}"
ARG PROCESS_EXPORTER_VERSION="${PROCESS_EXPORTER_VERSION:-0.8.7}"

# Set time zone
ENV TZ="UTC"
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone

# Install packages required in build stage
RUN apt update && \
    apt install -y --no-install-recommends \
        ca-certificates \
        curl \
        git \
        tar

# Create cardano-db-sync source directories
RUN install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync && \
    install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync/git && \
    install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync/tar

# Download cardano-db-sync archive
RUN curl --proto '=https' --tlsv1.2 \
        --location https://github.com/IntersectMBO/cardano-db-sync/releases/download/${CARDANO_DB_SYNC_VERSION}/cardano-db-sync-${CARDANO_DB_SYNC_VERSION}-linux.tar.gz \
        --output /usr/local/src/cardano-db-sync/cardano-db-sync-${CARDANO_DB_SYNC_VERSION}-linux.tar.gz

# Unarchive cardano-db-sync tarball
RUN tar --extract --gzip --file=/usr/local/src/cardano-db-sync/cardano-db-sync-${CARDANO_DB_SYNC_VERSION}-linux.tar.gz --directory=/usr/local/src/cardano-db-sync/tar

# Make cardano-db-sync executable
RUN chmod 0755 /usr/local/src/cardano-db-sync/tar/cardano-db-sync

# Create cardano-db-sync symlink
RUN ln -s /usr/local/src/cardano-db-sync/tar/cardano-db-sync /usr/local/bin/cardano-db-sync

# Clone cardano-db-sync Git repository
WORKDIR /usr/local/src/cardano-db-sync/git
RUN git clone --depth=1 --branch ${CARDANO_DB_SYNC_VERSION} https://github.com/IntersectMBO/cardano-db-sync.git

# Create cardano-cli source directory
RUN install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-cli

# Download cardano-cli archive
RUN curl --proto '=https' --tlsv1.2 \
        --location https://github.com/IntersectMBO/cardano-cli/releases/download/cardano-cli-${CARDANO_CLI_VERSION}/cardano-cli-${CARDANO_CLI_VERSION}-x86_64-linux.tar.gz \
        --output /usr/local/src/cardano-cli/cardano-cli-${CARDANO_CLI_VERSION}-x86_64-linux.tar.gz

# Download cardano-cli checksum
RUN curl --proto '=https' --tlsv1.2 \
        --location https://github.com/IntersectMBO/cardano-cli/releases/download/cardano-cli-${CARDANO_CLI_VERSION}/cardano-cli-${CARDANO_CLI_VERSION}-sha256sums.txt \
        --output /usr/local/src/cardano-cli/cardano-cli-${CARDANO_CLI_VERSION}-sha256sums.txt

# Verify cardano-cli checksum
WORKDIR /usr/local/src/cardano-cli
RUN sha256sum --ignore-missing --check cardano-cli-${CARDANO_CLI_VERSION}-sha256sums.txt

# Unarchive cardano-cli tarball
RUN tar --extract --gzip --file=/usr/local/src/cardano-cli/cardano-cli-${CARDANO_CLI_VERSION}-x86_64-linux.tar.gz --directory=/usr/local/src/cardano-cli

# Make cardano-cli executable
RUN chmod 0755 /usr/local/src/cardano-cli/cardano-cli-x86_64-linux

# Create cardano-cli symlink
RUN ln -s /usr/local/src/cardano-cli/cardano-cli-x86_64-linux /usr/local/bin/cardano-cli

# Create process_exporter source directory
RUN install --directory --owner=root --group=root --mode=0755 /usr/local/src/process_exporter

# Download process_exporter archive
RUN curl --proto '=https' --tlsv1.2 \
        --location https://github.com/ncabatoff/process-exporter/releases/download/v${PROCESS_EXPORTER_VERSION}/process-exporter-${PROCESS_EXPORTER_VERSION}.linux-amd64.tar.gz \
        --output /usr/local/src/process_exporter/process-exporter-${PROCESS_EXPORTER_VERSION}.linux-amd64.tar.gz

# Download process_exporter checksum
RUN curl --proto '=https' --tlsv1.2 \
        --location https://github.com/ncabatoff/process-exporter/releases/download/v${PROCESS_EXPORTER_VERSION}/checksums.txt \
        --output /usr/local/src/process_exporter/checksums.txt

# Verify process_exporter checksum
WORKDIR /usr/local/src/process_exporter
RUN sha256sum --ignore-missing --check checksums.txt

# Unarchive process_exporter tarball
RUN tar --extract --gzip --file=/usr/local/src/process_exporter/process-exporter-${PROCESS_EXPORTER_VERSION}.linux-amd64.tar.gz --directory=/usr/local/src/process_exporter

# Make process_exporter executable
RUN chmod 0755 /usr/local/src/process_exporter/process-exporter-${PROCESS_EXPORTER_VERSION}.linux-amd64/process-exporter

# Create process_exporter symlink
RUN ln -s /usr/local/src/process_exporter/process-exporter-${PROCESS_EXPORTER_VERSION}.linux-amd64/process-exporter /usr/local/bin/process_exporter

#---------------------------------------------------------------------

FROM docker.io/debian:stable-slim AS main

# Set environment variables
ENV CARDANO_NODE_SOCKET_PATH="/opt/cardano-node/data/db/node.socket" \
    PGPASSFILE="/opt/cardano-db-sync/config/pgpass"

# Set time zone
ENV TZ="UTC"
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone

# Install packages required in main stage
RUN apt update && \
    apt install -y --no-install-recommends \
        curl \
        dnsutils \
        iproute2 \
        iputils-ping \
        jq \
        less \
        lsof \
        netbase \
        netcat-openbsd \
        openssl \
        postgresql-client-15 \
        procps \
        tcpdump \
        telnet \
        vim

# Copy binaries from build stage
COPY --from=build --chown=root:root /usr/local/bin/cardano-cli /usr/local/bin/cardano-cli
COPY --from=build --chown=root:root /usr/local/bin/cardano-db-sync /usr/local/bin/cardano-db-sync
COPY --from=build --chown=root:root /usr/local/bin/process_exporter /usr/local/bin/process_exporter

# Create directories for upstream schema and scripts
RUN install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync && \
    install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync/config && \
    install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync/schema && \
    install --directory --owner=root --group=root --mode=0755 /usr/local/src/cardano-db-sync/scripts

# Copy schema and scripts from build stage
COPY --from=build --chown=root:root /usr/local/src/cardano-db-sync/git/cardano-db-sync/schema /usr/local/src/cardano-db-sync/schema
COPY --from=build --chown=root:root /usr/local/src/cardano-db-sync/git/cardano-db-sync/scripts /usr/local/src/cardano-db-sync/scripts

# Create cardano group and user
RUN groupadd --gid 10000 cardano && \
    useradd --comment 'cardano' --create-home --gid 10000 --password '!' --shell '/bin/bash' --uid 10000 cardano

# Create directories for variable cardano-db-sync data
RUN install --directory --owner=root --group=root --mode=0755 /opt/cardano-db-sync && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-db-sync/cardano-node && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-db-sync/config && \
    install --directory --owner=cardano --group=cardano --mode=0750 /opt/cardano-db-sync/data

# Create directories for variable cardano-node data
RUN install --directory --owner=root --group=root --mode=0755 /var/local/cardano-node && \
    install --directory --owner=cardano --group=cardano --mode=0750 /var/local/cardano-node/db

# Override database migration script to fix startup
RUN rm -f /usr/local/src/cardano-db-sync/schema/migration-4-0003-20210116.sql

# Copy config.json
COPY cardano-db-sync/migration-4-0003-20210116.sql /usr/local/src/cardano-db-sync/schema/migration-4-0003-20210116.sql

# Copy config.json
COPY cardano-db-sync/config.json /usr/local/src/cardano-db-sync/config/
RUN chmod 0755 /usr/local/src/cardano-db-sync/config/config.json

# Copy cmd.sh
COPY cardano-db-sync/cmd.sh /
RUN chmod 0755 /cmd.sh

USER cardano
STOPSIGNAL SIGINT

CMD ["/cmd.sh"]
